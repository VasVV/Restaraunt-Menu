{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sampleBurger","name","price","description","image","status","formatPrice","cents","toLocaleString","style","currency","removeDuplicates","arr","p","forEach","x","Object","keys","map","id","count","App","addBurger","e","setState","burgers","state","loadSample","addToOrder","order","updateBurger","u","burger","filter","Array","isArray","deleteBurger","splice","bind","burgerlist","this","i","index","details","className","React","Component","Header","AddBurger","props","preventDefault","nameRef","current","value","Number","priceRef","descriptionRef","imageRef","statusRef","currentTarget","reset","createRef","onSubmit","type","ref","placeholder","EditBurger","handleChange","editedBurger","onChange","readonly","onClick","Inventory","values","Order","orderIds","burgerprice","pricer","a","length","b","c","temp","class","Burger","way","isAvailiable","src","disabled","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.fbd937ca.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nconst sampleBurger = {\n  name: \"Cheeseburger\",\n  price: 1488,\n  description: \"Burger with meat and cheese\",\n  image:\n    \"https://www.mcdonalds.com/is/image/content/dam/usa/nfl/nutrition/items/hero/desktop/t-mcdonalds-Cheeseburger.jpg\",\n  status: true,\n};\n\nconst formatPrice = (cents) => {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"EUR\",\n  });\n};\nconst removeDuplicates = (arr) => {\n  let p = {};\n  arr.forEach((x) => {\n    p[x] = (p[x] || 0) + 1;\n  });\n  return Object.keys(p).map((x) => {\n    return { id: x, count: p[x] };\n  });\n};\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      burgers: [],\n      order: [],\n    };\n    this.addBurger = this.addBurger.bind(this);\n  }\n  addBurger = (e) => {\n    this.setState({ burgers: [...this.state.burgers, e] });\n  };\n\n  loadSample = () => {\n    this.setState({ burgers: [...this.state.burgers, sampleBurger] });\n  };\n\n  addToOrder = (e) => {\n    this.setState({ order: [...this.state.order, e.name] });\n  };\n\n  updateBurger = (e, u) => {\n    const burger = this.state.burgers;\n\n    burger[e] = u;\n\n    this.setState({ burgers: [...this.state.burgers, burger] });\n    this.setState({\n      burgers: [\n        ...this.state.burgers.filter((e) => {\n          return !Array.isArray(e);\n        }),\n      ],\n    });\n  };\n  deleteBurger = (e) => {\n    const burger = this.state.burgers;\n    burger.splice(e, 1);\n    this.setState({ burgers: [...this.state.burgers, burger] });\n    this.setState({\n      burgers: [\n        ...this.state.burgers.filter((e) => {\n          return !Array.isArray(e);\n        }),\n      ],\n    });\n  };\n  render() {\n    const burgerlist = this.state.burgers.map((e, i) => {\n      return (\n        <Burger\n          key={e}\n          index={e}\n          details={this.state.burgers[i]}\n          addToOrder={this.addToOrder}\n        />\n      );\n    });\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header />\n          <ul>{burgerlist}</ul>\n        </div>\n        <Order {...this.state} />\n        <Inventory\n          addBurger={this.addBurger}\n          loadSample={this.loadSample}\n          burgers={this.state.burgers}\n          updateBurger={this.updateBurger}\n          deleteBurger={this.deleteBurger}\n        />\n      </div>\n    );\n  }\n}\n\nconst Header = () => (\n  <header className=\"top\">\n    <h1>Menu</h1>\n  </header>\n);\n\nclass AddBurger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nameRef = React.createRef();\n    this.priceRef = React.createRef();\n    this.descriptionRef = React.createRef();\n    this.imageRef = React.createRef();\n    this.statusRef = React.createRef();\n  }\n\n  addBurger = (e) => {\n    e.preventDefault();\n    const burger = {\n      name: this.nameRef.current.value,\n      price: Number(this.priceRef.current.value),\n      description: this.descriptionRef.current.value,\n      image: this.imageRef.current.value,\n      status: this.statusRef.current.value === \"yes\" ? true : false,\n    };\n    this.props.addBurger(burger);\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"burger-edit\" onSubmit={this.addBurger}>\n        <input name=\"name\" type=\"text\" ref={this.nameRef} placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          type=\"text\"\n          ref={this.priceRef}\n          placeholder=\"Price\"\n        />\n        <input\n          name=\"description\"\n          type=\"text\"\n          ref={this.descriptionRef}\n          placeholder=\"Description\"\n        />\n        <input\n          name=\"image\"\n          type=\"text\"\n          ref={this.imageRef}\n          placeholder=\"Image\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"yes\">Available</option>\n          <option value=\"no\">Unavailable</option>\n        </select>\n        <button type=\"submit\">Add Burger </button>\n      </form>\n    );\n  }\n}\n\nclass EditBurger extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  handleChange = (e) => {\n    const editedBurger = {\n      ...this.props.burgers,\n      [e.currentTarget.name]: e.currentTarget.value,\n    };\n    this.props.updateBurger(this.props.index, editedBurger);\n  };\n  render() {\n    return (\n      <div className=\"burger-edit\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.burgers.name}\n          readonly=\"readonly\"\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          value={this.props.burgers.price}\n          onChange={this.handleChange}\n        />\n        <input\n          name=\"description\"\n          type=\"text\"\n          value={this.props.burgers.description}\n          onChange={this.handleChange}\n        />\n        <input\n          name=\"image\"\n          type=\"text\"\n          value={this.props.burgers.image}\n          onChange={this.handleChange}\n        />\n        <select\n          name=\"status\"\n          value={this.props.burgers.status ? \"yes\" : \"no\"}\n          onChange={this.handleChange}\n        >\n          <option value=\"yes\">Available</option>\n          <option value=\"no\">Unavailable</option>\n        </select>\n        <button onClick={() => this.props.deleteBurger(this.props.index)}>\n          DELETE BURGER\n        </button>\n      </div>\n    );\n  }\n}\n\nclass Inventory extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        {\" \"}\n        <h2>Stock</h2>\n        {this.props.burgers.map((e, i) => {\n          return (\n            <EditBurger\n              burgers={Object.values(this.props.burgers)[i]}\n              updateBurger={this.props.updateBurger}\n              key={i}\n              index={i}\n              deleteBurger={this.props.deleteBurger}\n            />\n          );\n        })}\n        <AddBurger addBurger={this.props.addBurger} />\n        <button onClick={this.props.loadSample}>LOAD SAMPLE BURGER</button>\n      </div>\n    );\n  }\n}\nclass Order extends React.Component {\n  render() {\n    const orderIds = Object.values(this.props.order);\n    const burgerprice = Object.values(this.props.burgers);\n    let pricer = {};\n    for (let a = 0; a < burgerprice.length; a++) {\n      let b = burgerprice[a].name;\n      for (let c = 0; c < orderIds.length; c++) {\n        if (orderIds[c] === b) {\n          pricer[b] = burgerprice[a].price;\n          break;\n        }\n      }\n    }\n\n    let temp = 0;\n    let total = removeDuplicates(orderIds).forEach((e) => {\n      temp += pricer[e.id] * e.count;\n    });\n    let x = removeDuplicates(orderIds).map((e) => {\n      return (\n        <ul>\n          <li class=\"prices\">\n            {e.count} {e.id}\n            {e.count > 1 ? \"s\" : \"\"} {formatPrice(pricer[e.id] * e.count)}{\" \"}\n          </li>\n        </ul>\n      );\n    });\n    return (\n      <div className=\"order-wrap\" id=\"orders\">\n        <h2>Your order</h2>\n        {x}\n        <div className={temp === 0 ? \"hidden\" : \"\"}>\n          <b>Total: </b>\n          {formatPrice(temp)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Burger extends React.Component {\n  render() {\n    const way = this.props.details;\n    const isAvailiable = way.status ? true : false;\n    return (\n      <li className=\"menu-burger\">\n        <img src={way.image} />\n        <h3 className=\"burger-name\">\n          {way.name}\n          <span className=\"price\">{formatPrice(way.price)}</span>\n        </h3>\n        <p>{way.description}</p>\n        <button\n          disabled={!isAvailiable}\n          onClick={() => {\n            this.props.addToOrder(this.props.index);\n          }}\n        >\n          {isAvailiable ? \"ADD TO CART\" : \"SOLD OUT\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}